# -*- coding: utf-8 -*-
# This first comment is here to tell the Python interpreter that we are using the UTF-8 encoding.
# This is required if we're using some non-ASCII characters in this file.
# It's not needed for this specific file, I'm just including it to document this feature for myself.

#  This file contains all configuration information that might be different on different instances (e.g. DEV, TEST,
# PROD, client1, client2, ...).
# We define these values here, so that we don't have to do any hardcoding in the application.
# It is located in the root directory, so it's not part of our application (which starts at "app" directory).

# activates the cross-site request forgery prevention
WTF_CSRF_ENABLED = True
# SECRET_KEY is only needed when CSRF is enabled, and is used to create a cryptographic token that is used to validate a form
# or encrypt cookies. This one is generated by os.urandom(32)
SECRET_KEY = 'D\x8b#\xefV\xff\xd4\x87},\x06\xc4\xf5mif\xf6X\x1d\x14\xce\xbf\x17\xa1\xb3\xd7\xd0Re\xc9\xb1\x96'

OPENID_PROVIDERS = [
    {'name': 'Google', 'url': 'https://www.google.com/accounts/o8/id'},
    {'name': 'Yahoo', 'url': 'https://me.yahoo.com'},
    {'name': 'AOL', 'url': 'http://openid.aol.com/<username>'},
    {'name': 'Flickr', 'url': 'http://www.flickr.com/<username>'},
    {'name': 'MyOpenID', 'url': 'https://www.myopenid.com'}
]

# SQLAlchemy is the Python SQL toolkit and Object Relational Mapper (ORM) that gives application developers
# the full power and flexibility of SQL. See http://www.sqlalchemy.org/
#
# The SQLALCHEMY_DATABASE_URI is required by the Flask-SQLAlchemy extension. This is the path of our database file.
# The SQLALCHEMY_MIGRATE_REPO is the folder where we will store the SQLAlchemy-migrate data files.
import os
basedir = os.path.abspath(os.path.dirname(__file__))

SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(basedir, 'app.db')
# MySQL, Oracle, Postgres also available. The complete list: http://docs.sqlalchemy.org/en/rel_0_9/dialects/index.html
SQLALCHEMY_MIGRATE_REPO = os.path.join(basedir, 'db_repository')

# mail server settings
# MAIL_SERVER = 'localhost'
# MAIL_PORT = 25
# MAIL_USERNAME = None
# MAIL_PASSWORD = None
MAIL_SERVER = 'smtp.gmail.com'
MAIL_PORT = 465
MAIL_USE_TLS = False
MAIL_USE_SSL = True
MAIL_USERNAME = os.environ.get('MICROBLOG_MAIL_USERNAME')
MAIL_PASSWORD = os.environ.get('MICROBLOG_MAIL_PASSWORD')


# administrator list
ADMINS = [os.environ.get('MICROBLOG_ADMIN_MAIL')]

# pagination
POSTS_PER_PAGE = 3

# Flask-WhooshAlchemy full text search config.
# This is the full path and name of the whoosh database file:
WHOOSH_BASE = os.path.join(basedir, 'search.db')

# available languages for Flask-Babel
LANGUAGES = {'en': 'English', 'hr': 'Hrvatski'}

# Microsoft Translation Service
MS_TRANSLATOR_CLIENT_ID = os.environ.get('MICROBLOG_MS_TRANSLATOR_CLIENT_ID')
MS_TRANSLATOR_CLIENT_SECRET = os.environ.get('MICROBLOG_MS_TRANSLATOR_CLIENT_SECRET')
